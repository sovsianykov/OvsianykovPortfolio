{"version":3,"sources":["script.js"],"names":["TypeWriter","[object Object]","txtElement","words","wait","this","txt","wordIndex","parseInt","type","isDeleting","current","length","fullTxt","substring","innerHTML","typeSpeed","setTimeout","init","document","querySelector","JSON","parse","getAttribute","addEventListener"],"mappings":"AAAA,MAAMA,WACFC,YAAYC,EAAYC,EAAOC,EAAO,KAClCC,KAAKH,WAAaA,EAClBG,KAAKF,MAAQA,EACbE,KAAKC,IAAM,GACXD,KAAKE,UAAY,EACjBF,KAAKD,KAAOI,SAASJ,EAAM,IAC3BC,KAAKI,OACLJ,KAAKK,YAAa,EAGtBT,OAEI,MAAMU,EAAUN,KAAKE,UAAYF,KAAKF,MAAMS,OAEtCC,EAAUR,KAAKF,MAAMQ,GAGvBN,KAAKK,WAELL,KAAKC,IAAMO,EAAQC,UAAU,EAAGT,KAAKC,IAAIM,OAAS,GAGlDP,KAAKC,IAAMO,EAAQC,UAAU,EAAGT,KAAKC,IAAIM,OAAS,GAItDP,KAAKH,WAAWa,UAAY,qBAAqBV,KAAKC,aAGtD,IAAIU,EAAY,IAEZX,KAAKK,aACLM,GAAa,GAIZX,KAAKK,YAAcL,KAAKC,MAAQO,EAK1BR,KAAKK,YAA2B,KAAbL,KAAKC,MAC/BD,KAAKK,YAAa,EAElBL,KAAKE,YAELS,EAAY,MARZA,EAAYX,KAAKD,KAEjBC,KAAKK,YAAa,GAStBO,YAAW,IAAMZ,KAAKI,QAAQO,IAQtC,SAASE,OACL,MAAMhB,EAAaiB,SAASC,cAAc,aACpCjB,EAAQkB,KAAKC,MAAMpB,EAAWqB,aAAa,eAC3CnB,EAAOF,EAAWqB,aAAa,aAErC,IAAIvB,WAAWE,EAAYC,EAAOC,GARtCe,SAASK,iBAAiB,mBAAoBN","file":"script.js","sourcesContent":["class TypeWriter {\r\n    constructor(txtElement, words, wait = 3000) {\r\n        this.txtElement = txtElement;\r\n        this.words = words;\r\n        this.txt = '';\r\n        this.wordIndex = 0;\r\n        this.wait = parseInt(wait, 10);\r\n        this.type();\r\n        this.isDeleting = false;\r\n    }\r\n\r\n    type() {\r\n        // Current index of word\r\n        const current = this.wordIndex % this.words.length;\r\n        // Get full text of current word\r\n        const fullTxt = this.words[current];\r\n\r\n        // Check if deleting\r\n        if (this.isDeleting) {\r\n            // Remove char\r\n            this.txt = fullTxt.substring(0, this.txt.length - 1);\r\n        } else {\r\n            // Add char\r\n            this.txt = fullTxt.substring(0, this.txt.length + 1);\r\n        }\r\n\r\n        // Insert txt into element\r\n        this.txtElement.innerHTML = `<span class=\"txt\">${this.txt}</span>`;\r\n\r\n        // Initial Type Speed\r\n        let typeSpeed = 300;\r\n\r\n        if (this.isDeleting) {\r\n            typeSpeed /= 2;\r\n        }\r\n\r\n        // If word is complete\r\n        if (!this.isDeleting && this.txt === fullTxt) {\r\n            // Make pause at end\r\n            typeSpeed = this.wait;\r\n            // Set delete to true\r\n            this.isDeleting = true;\r\n        } else if (this.isDeleting && this.txt === '') {\r\n            this.isDeleting = false;\r\n            // Move to next word\r\n            this.wordIndex++;\r\n            // Pause before start typing\r\n            typeSpeed = 500;\r\n        }\r\n\r\n        setTimeout(() => this.type(), typeSpeed);\r\n    }\r\n}\r\n\r\n// Init On DOM Load\r\ndocument.addEventListener('DOMContentLoaded', init);\r\n\r\n// Init App\r\nfunction init() {\r\n    const txtElement = document.querySelector('.txt-type');\r\n    const words = JSON.parse(txtElement.getAttribute('data-words'));\r\n    const wait = txtElement.getAttribute('data-wait');\r\n    // Init TypeWriter\r\n    new TypeWriter(txtElement, words, wait);\r\n}\r\n"]}